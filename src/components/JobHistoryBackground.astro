---
import { cn } from "../utils/cn";

type Props = {
  class: string;
};

const { class: className } = Astro.props;

const calculateSectionHeight = (height: number) => height - 80;

// NOTE:
// Path for the scroll animation to follow
const d = `M 456, 10
    v 100
    s 0,40 -40,40
    h -310
    s -40,0 -40,40
    v ${calculateSectionHeight(524)}
    s 0, 40 40,40
    h 700
    s 40,0 40,40
    v ${calculateSectionHeight(500)}
    s 0,40 -40,40
    h -700
    s -40,0 -40,40
    v ${calculateSectionHeight(432)}
    s 0, 40 40,40
    h 700
    s 40,0 40,40
    v ${calculateSectionHeight(432)}
    s 0,40 -40,40
    h -700
    s -40,0 -40,40
    v ${calculateSectionHeight(497)}
    s 0, 40 40,40
    h 700
    s 40,0 40,40
    v ${calculateSectionHeight(500)}
    s 0,40 -40,40
    h -320
    s -40,0 -40,40
    v 100
    
`;
---

<job-history-background>
  <div class={cn("absolute z-0 top-0 w-full h-full", className)} aria-hidden>
    <svg
      fill="none"
      width="100%"
      height="100%"
      preserveAspectRatio="xMinYMin meet"
    >
      <path
        fill="none"
        stroke="#333"
        stroke-width="12"
        stroke-linecap="round"
        d={d}></path>
      <path
        class="background-line"
        fill="none"
        stroke="#FFF"
        stroke-width="12"
        stroke-linecap="round"
        pathLength="1"
        stroke-dasharray="0"
        d={d}></path>
    </svg>
  </div>
</job-history-background>

<script>
  import { scroll } from "motion";

  class JobHistoryBackground extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const target = this.querySelector("div")!;
      const path = this.querySelector("path.background-line")!;

      scroll(
        ({ y }) => {
          if (path instanceof SVGPathElement) {
            path.style.strokeDasharray = `${y.progress}, 1`;
          }
          this.dispatchEvent(
            new CustomEvent("job-history-background-scroll", {
              detail: {
                payload: {
                  progress: y.progress,
                },
              },
              bubbles: true,
            }),
          );
        },
        {
          target: target,
          offset: ["0 50vh", "1 50vh"],
        },
      );
    }
  }

  customElements.define("job-history-background", JobHistoryBackground);
</script>
